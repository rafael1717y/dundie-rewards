<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="3" time="0.160" timestamp="2022-05-24T12:56:54.841607" hostname="rafael-Inspiron-7572"><testcase classname="tests.test_load" name="test_load_positive_has_2_people" time="0.005"><failure message="AssertionError: assert 3 == 2&#10; +  where 3 = len(['Jim Halpert, Sales, Salesman, jim@dundlermifflin.com', 'Dwight Schrute, Sales, Manager, schrute@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'])&#10; +    where ['Jim Halpert, Sales, Salesman, jim@dundlermifflin.com', 'Dwight Schrute, Sales, Manager, schrute@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'] = load('/home/rafael/Documents/Development/dundie-rewards/tests/assets/people.csv')">request = &lt;FixtureRequest for &lt;Function test_load_positive_has_2_people&gt;&gt;

    @pytest.mark.unit
    @pytest.mark.high
    def test_load_positive_has_2_people(request):
        """Teste load function"""
&gt;       assert len(load(PEOPLE_FILE)) == 2
E       AssertionError: assert 3 == 2
E        +  where 3 = len(['Jim Halpert, Sales, Salesman, jim@dundlermifflin.com', 'Dwight Schrute, Sales, Manager, schrute@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'])
E        +    where ['Jim Halpert, Sales, Salesman, jim@dundlermifflin.com', 'Dwight Schrute, Sales, Manager, schrute@dundlermifflin.com', 'Gabe Lewis, Directory, Manager, glewis@dundlermifflin.com'] = load('/home/rafael/Documents/Development/dundie-rewards/tests/assets/people.csv')

/home/rafael/Documents/Development/dundie-rewards/tests/test_load.py:12: AssertionError</failure></testcase><testcase classname="tests.test_load" name="test_load_positive_has_first_name_starts_with_j" time="0.002" /><testcase classname="integration.test_load" name="test_load" time="0.100" /></testsuite></testsuites>